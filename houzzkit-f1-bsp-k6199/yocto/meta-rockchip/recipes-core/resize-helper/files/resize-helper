#!/bin/sh
# Copyright (c) Fathi Boudra <fathi.boudra@linaro.org>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# we must be root
[ $(whoami) = "root" ] || { echo "E: You must be root" && exit 1; }

ROOTFS_DEVICE=$(findmnt -n -o SOURCE --target /)
if [[ "${ROOTFS_DEVICE}" == "overlayroot" ]]; then
	exit 0
fi

# we must have few tools
SGDISK=$(which sgdisk) || { echo "E: You must have sgdisk" && exit 1; }
PARTED=$(which parted) || { echo "E: You must have parted" && exit 1; }
PARTPROBE=$(which partprobe) || { echo "E: You must have partprobe" && exit 1; }
RESIZE2FS=$(which resize2fs) || { echo "E: You must have resize2fs" && exit 1; }
E2FSCK=$(which e2fsck) || { echo "E: You must have e2fsck" && exit 1; }

# find root device
#ROOT_DEVICE=$(findmnt --noheadings --output=SOURCE / | cut -d'[' -f1)
# prune root device (for example UUID)
#ROOT_DEVICE=$(realpath ${ROOT_DEVICE})

MAJOR_ROOTFS=$(mountpoint -d / | cut -f 1 -d ":")
MINOR_ROOTFS=$(mountpoint -d / | cut -f 2 -d ":")

DEV_ROOTFS=$(cat /proc/partitions | awk {'if ($1 == "'${MAJOR_ROOTFS}'" && $2 == "'${MINOR_ROOTFS}'") print $4 '})
ROOT_DEVICE=/dev/${DEV_ROOTFS}

DEV_BLK=$(cat /proc/partitions | awk {'if ($1 == "'${MAJOR_ROOTFS}'" && $2 == "0") print $4 '})
BOOT_DEVICE=$(fdisk  -l /dev/${DEV_BLK} | grep EFI | cut -f 1 -d " ")

:<<!
mount ${BOOT_DEVICE} /boot > /dev/null

if [ $? -eq '0' ]; then
	echo "${BOOT_DEVICE} /boot    vfat   defaults  0   2" >> /etc/fstab
fi
!

PART_MEMERY_TYPE=$(udevadm info --query=property --name=${ROOT_DEVICE} | grep '^ID_PATH=' | cut -d'.' -f2)

if [ "$PART_MEMERY_TYPE" = "sdhci" ]; then
    ${RESIZE2FS} "${ROOT_DEVICE}"
else

# get the partition number and type
PART_ENTRY_NUMBER=$(udevadm info --query=property --name=${ROOT_DEVICE} | grep '^ID_PART_ENTRY_NUMBER=' | cut -d'=' -f2)
PART_TABLE_TYPE=$(udevadm info --query=property --name=${ROOT_DEVICE} | grep '^ID_PART_TABLE_TYPE=' | cut -d'=' -f2)
# find the block device
DEVICE=$(udevadm info --query=path --name=${ROOT_DEVICE} | awk -F'/' '{print $(NF-1)}')
DEVICE="/dev/${DEVICE}"

if [ "$PART_TABLE_TYPE" = "gpt" ]; then
	${SGDISK} -e ${DEVICE}
	#${PARTPROBE}
fi

${PARTED} ${DEVICE} resizepart ${PART_ENTRY_NUMBER} 100%
#${PARTPROBE}
${E2FSCK} -f "${ROOT_DEVICE}"
${RESIZE2FS} "${ROOT_DEVICE}"
fi
